{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","services/persons.js","components/Notification.js","App.js","index.js"],"names":["Filter","searchTerm","handleSearchTerm","value","onChange","PersonForm","addName","newName","handleNameChange","newNumber","handleNumberChange","onSubmit","type","Persons","persons","handleDelete","map","person","name","number","onClick","id","baseUrl","services","getAll","axios","get","then","reponse","data","create","newObject","post","response","updatePerson","updatedPerson","put","deletePerson","delete","Notification","message","msgType","className","App","useState","setPersons","setNewName","setNewNumber","setSearchTerm","setMessage","setMsgType","useEffect","personsService","initialPersons","namesToShow","filter","toLowerCase","indexOf","event","target","preventDefault","foundPerson","find","window","confirm","changedPerson","p","catch","error","setTimeout","newNameObj","returnedPerson","concat","deletedPerson","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c4091e36.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Filter = ({searchTerm, handleSearchTerm}) =>{\r\n\r\n    return(\r\n        <div>\r\n            filter shown with <input value={searchTerm} onChange={handleSearchTerm}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst PersonForm = ({addName, newName,handleNameChange, newNumber, handleNumberChange}) => {\r\n    return (\r\n        <form onSubmit={addName}>\r\n        <div>\r\n          name: <input value={newName} onChange={handleNameChange}  />\r\n        </div>\r\n        <div>\r\n          number: <input value={newNumber} onChange={handleNumberChange}/> \r\n        </div>\r\n        <div>\r\n          <button type=\"submit\">add</button>\r\n        </div>\r\n      </form>\r\n    )\r\n}\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst Persons = ({persons, handleDelete}) => {\r\n    return (\r\n        <div>\r\n             {persons.map(person => (\r\n                <div key={person.id}>\r\n                    {person.name} {person.number} <button onClick={() => handleDelete(person.id)}>Delete</button> \r\n                </div>\r\n              ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Persons","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(reponse => reponse.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n\r\n}\r\n\r\nconst deletePerson = id => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst updatePerson =  updatedPerson => {\r\n    const request = axios.put(`${baseUrl}/${updatedPerson.id}`, updatedPerson)\r\n    return request.then(response => response.data)\r\n}\r\nconst services = { getAll, create, updatePerson, deletePerson }\r\nexport default services","import React from 'react'\r\nimport '../index.css'\r\n\r\nconst Notification = ({message, msgType}) => {\r\n    if(message === null){\r\n        return null\r\n    }\r\n    return(\r\n        <div className={`${msgType === 'success'? 'success' : 'fail'}`}>\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport personsService from './services/persons'\nimport Notification from './components/Notification'\nimport './index.css'\n\n\nconst App = () => {\n  //States\n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber] = useState('')\n  const [ searchTerm, setSearchTerm ] = useState('')\n  const [message, setMessage] = useState(null)\n  const [msgType, setMsgType] = useState('')\n\n  useEffect( () =>{\n    personsService\n    .getAll()\n    .then( initialPersons => setPersons(initialPersons))\n  },[])\n\n  const addName = (event) => {\n    event.preventDefault()\n    const foundPerson = persons.find(person => person.name === newName)\n    if(foundPerson){\n      if(window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)){\n        //Updating person's data\n        const changedPerson = {...foundPerson, number:newNumber}\n        personsService\n        .updatePerson(changedPerson)\n        .then(updatedPerson => {\n          setPersons(persons.map(p => p.name === newName ? updatedPerson : p))\n          setNewName('')\n          setNewNumber('')\n        })\n        .catch( error => {\n          setMessage(`Information of ${newName} has already been removed from server`)\n          setMsgType('fail')\n          setPersons(persons.filter(person =>  person.name !== newName))\n          setNewName('')\n          setNewNumber('')\n          setTimeout( () => setMessage(null), 5000)\n        })\n      }\n      else\n        return \n    }\n    else{\n      const newNameObj = {name: newName, number: newNumber}\n      personsService\n      .create(newNameObj)\n      .then(returnedPerson =>{\n        setPersons(persons.concat(returnedPerson))\n        setNewName('')\n        setNewNumber('')\n        setMessage(`Added ${returnedPerson.name}`)\n        setMsgType('success')\n        setTimeout(() => {\n          setMessage(null) \n        },5000)\n      })\n    }\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleSearchTerm = (event) =>{\n    setSearchTerm(event.target.value)\n  }\n\n  const handleDelete = (id) => {\n    if(window.confirm(\"Do you really want to delete this person\")){\n      personsService\n      .deletePerson(id)\n      .then( deletedPerson => {\n        setPersons(persons.filter(person =>  person.id !== id))\n      })\n    }\n    else\n      return\n  }\n\n\n  const namesToShow = searchTerm === ''\n    ? persons:\n    persons.filter(person => {\n      let name = person.name.toLowerCase()\n      return name.indexOf(searchTerm.toLowerCase()) > -1\n    })\n\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} msgType={msgType} />\n      <Filter searchTerm={searchTerm} handleSearchTerm={handleSearchTerm} />\n      <h2>add a new</h2>\n      <PersonForm addName={addName} newName={newName} handleNameChange={handleNameChange}\n                  newNumber={newNumber} handleNumberChange={handleNumberChange} />\n      <h2>Numbers</h2>\n      <Persons  persons={namesToShow} handleDelete={handleDelete}/>\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}